swagger: '2.0'
info:
  description: 'This is for the zenodo API http://developers.zenodo.org/#rest-api'
  version: 1.0.0
  title: Zenodo
  termsOfService: 'http://about.zenodo.org/terms/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: sandbox.zenodo.org
basePath: /api
schemes:
  - https
paths:
  /communities:
    get:
      summary: List of communities
      description: ''
      operationId: listCommunities
      tags:
        - preview
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '405':
          description: Method Not Allowed
  /deposit/depositions:
    get:
      summary: List of deposits
      description: 'List all depositions for the currently authenticated user'
      parameters:
        - in: query
          name: q
          type: string
          description: 'Search query (using Elasticsearch query string syntax)'
        - in: query
          name: status
          type: string
          description: 'Filter result based on deposit status (either draft or published)'
        - in: query
          name: sort
          type: string
          description: 'Sort order (bestmatch or mostrecent). Prefix with minus to change form ascending to descending (e.g. -mostrecent)'
        - in: query
          name: page
          type: integer
          description: 'Page number for pagination'
        - in: query
          name: size
          type: integer
          description: 'Number of results to return per page'
      operationId: listDeposits
      tags:
        - deposits
      produces:
        - application/json
      security:
        - access_token: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Deposit'
        '405':
          description: Method Not Allowed
    post:
      summary: Create a new deposit
      description: ''
      operationId: createDeposit
      tags:
        - deposits
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: body
          name: deposit
          description: The deposit to create.
          schema:
            $ref: '#/definitions/Deposit'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
  '/deposit/depositions/{depositId}':
    get:
      summary: Get deposit
      description: Get a single deposit
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
      operationId: getDeposit
      tags:
        - deposits
      produces:
        - application/json
      security:
        - access_token: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
    put:
      summary: Put deposit
      description: Update metadata for a single deposit
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
        - in: body
          name: metadata
          description: The deposit to update.
          schema:
            $ref: '#/definitions/NestedDepositMetadata'
      operationId: putDeposit
      tags:
        - deposits
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - access_token: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
    delete:
      summary: Delete deposit
      description: Delete a single deposit
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
      operationId: deleteDeposit
      tags:
        - deposits
      security:
        - access_token: []
      responses:
        '201':
          description: OK
        '204':
          description: OK
        '403':
          description: Cannot delete already published deposit
        '404':
          description: Deposition does not exist
  '/deposit/depositions/{depositId}/files':
    get:
      summary: List of files for deposit
      description: ''
      operationId: listFilesForDeposit
      tags:
        - files
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
      security:
        - access_token: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DepositionFile'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
      produces:
        - application/json
    post:
      summary: Create a new file
      description: ''
      operationId: createFile
      tags:
        - files
      consumes:
        - multipart/form-data
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
        - in: formData
          name: file
          type: file
          description: The file to upload
        - in: formData
          name: filename
          type: string
          description: Filename for file
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/DepositionFile'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
    put:
      summary: Sort the files for a deposit
      description: ''
      operationId: sortFiles
      tags:
        - files
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
        - in: body
          name: filelist
          description: 'The order of files, use only the id portion of the array of files'
          schema:
            $ref: '#/definitions/DepositionFile'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DepositionFile'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
  '/deposit/depositions/{depositId}/files/{fileId}':
    get:
      summary: Retrieve a single deposition file.
      description: ''
      operationId: getFile
      tags:
        - files
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
        - in: path
          name: fileId
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DepositionFile'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
    put:
      summary: >-
        Update a deposition file resource. Currently the only use is renaming an
        already uploaded file. If you want to replace the actual file, please
        delete the file and upload a new file.
      description: ''
      operationId: updateFile
      tags:
        - files
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
        - in: path
          name: fileId
          type: string
          required: true
        - in: body
          name: data
          schema:
            $ref: '#/definitions/DepositionFile'
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DepositionFile'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
    delete:
      summary: >-
        Delete an existing deposition file resource. Note, only deposition files
        for unpublished depositions may be deleted.
      description: ''
      operationId: deleteFile
      tags:
        - files
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
        - in: path
          name: fileId
          type: string
          required: true
      responses:
        '204':
          description: OK
          schema:
            $ref: '#/definitions/DepositionFile'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
  '/deposit/depositions/{depositId}/actions/publish':
    post:
      summary: >-
        Publish a deposition. Note, once a deposition is published, you can no
        longer delete it.
      description: Untested swagger description
      operationId: publishDeposit
      tags:
        - actions
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
      responses:
        '202':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Method Not Allowed
        '500':
          description: Internal Error
  '/deposit/depositions/{depositId}/actions/edit':
    post:
      summary: Unlock already submitted deposition for editing.
      description: Untested swagger description
      operationId: editDeposit
      tags:
        - actions
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Method Not Allowed
        '409':
          description: Conflict
        '500':
          description: Internal Error
  '/deposit/depositions/{depositId}/actions/discard':
    post:
      summary: Discard changes in the current editing session.
      description: Untested swagger description
      operationId: discardDeposit
      tags:
        - actions
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Method Not Allowed
  '/deposit/depositions/{depositId}/actions/newversion':
    post:
      summary: Create a new version of a deposition.
      description: Untested swagger description
      operationId: newDepositVersion
      tags:
        - actions
      produces:
        - application/json
      security:
        - access_token: []
      parameters:
        - in: path
          name: depositId
          type: integer
          required: true
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Deposit'
        '400':
          description: Method Not Allowed
  /funders:
    get:
      summary: List of funders
      description: ''
      operationId: listFunders
      tags:
        - preview
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '405':
          description: Method Not Allowed
  /grants:
    get:
      summary: List of grants
      description: ''
      operationId: listGrants
      tags:
        - preview
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '405':
          description: Method Not Allowed
  /licenses:
    get:
      summary: List of licenses
      description: ''
      operationId: listLicenses
      tags:
        - preview
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '405':
          description: Method Not Allowed
  /records:
    get:
      summary: List of records
      description: ''
      operationId: listRecords
      tags:
        - preview
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '405':
          description: Method Not Allowed
securityDefinitions:
  zenodo_auth:
    type: oauth2
    authorizationUrl: 'https://zenodo.org/oauth/authorize'
    flow: implicit
    scopes:
      'deposit:write': >-
        Grants write access to depositions, but does not allow publishing the
        upload.
      'deposit:actions': 'Grants access to publish, edit and discard edits for depositions.'
  access_token:
    type: apiKey
    name: access_token
    in: query
definitions:
  Deposit:
    type: object
    properties:
      conceptrecid:
        type: integer
      created:
        type: string
        format: date-time
      files:
        type: array
        items:
          $ref: '#/definitions/DepositionFile'
      id:
        type: integer
      links:
        type: object
        additionalProperties:
          type: string
        example:
          conceptdoi: https://doi.org/10.5281/zenodo.705645
      metadata:
        $ref: '#/definitions/DepositMetadata'
      modified:
        type: string
        format: date-time
      owner:
        type: integer
      record_id:
        type: integer
      state:
        type: string
      submitted:
        type: boolean
      title:
        type: string
  NestedDepositMetadata:
      type: object
      properties:
        metadata:
          $ref: '#/definitions/DepositMetadata'
  DepositMetadata:
    type: object
    properties:
      upload_type:
        enum:
          - publication
          - poster
          - presentation
          - dataset
          - image
          - video
          - software
      publication_type:
        enum:
          - book
          - section
          - conferencepaper
          - article
          - patent
          - preprint
          - report
          - softwaredocumentation
          - thesis
          - technicalnote
          - workingpaper
          - other
      image_type:
        enum:
          - figure
          - plot
          - drawing
          - diagram
          - photo
          - other
      publication_date:
        type: string
      title:
        type: string
      creators:
        type: array
        items:
          $ref: '#/definitions/Author'
      description:
        type: string
      access_right:
        enum:
          - open
          - embargoed
          - restricted
          - closed
      license:
        type: string
      embargo_date:
        type: string
        format: date-time
      access_conditions:
        type: string
      doi:
        type: string
      prereserve_doi:
        type: object
      keywords:
        type: array
        items:
          type: string
      notes:
        type: string
      related_identifiers:
        type: array
        items:
          $ref: '#/definitions/RelatedIdentifier'
      contributors:
        type: array
        items:
          $ref: '#/definitions/Contributor'
      references:
        type: array
        items:
          type: string
      communities:
        type: array
        items:
          $ref: '#/definitions/Community'
      grants:
        type: array
        items:
          $ref: '#/definitions/Grant'
      journal_title:
        type: string
      journal_volume:
        type: string
      journal_issue:
        type: string
      journal_pages:
        type: string
      conference_title:
        type: string
      conference_acronym:
        type: string
      conference_dates:
        type: string
      conference_place:
        type: string
      conference_url:
        type: string
      conference_session:
        type: string
      conference_session_part:
        type: string
      imprint_publisher:
        type: string
      imprint_isbn:
        type: string
      imprint_place:
        type: string
      partof_title:
        type: string
      partof_pages:
        type: string
      thesis_supervisors:
        type: array
        items:
          $ref: '#/definitions/Author'
      thesis_university:
        type: string
      subjects:
        type: array
        items:
          $ref: '#/definitions/Subject'
      version:
        type: string
      language:
        type: string
    required:
      - upload_type
      - publication_date
      - title
      - creators
      - description
      - access_right
  Subject:
    type: object
    properties:
      term:
        type: string
      identifier:
        type: string
      scheme:
        type: string
  Community:
    type: object
    properties:
      id:
        type: string
  RelatedIdentifier:
    type: object
    properties:
      identifier:
        type: string
      relation:
        enum:
          - isCitedBy
          - cites
          - isSupplementTo
          - isSupplementedBy
          - isNewVersionOf
          - isPreviousVersionOf
          - isPartOf
          - hasPart
          - compiles
          - isCompiledBy
          - isIdenticalTo
          - isAlternateIdentifier
  Grant:
    type: object
    properties:
      identifier:
        type: string
  Contributor:
    type: object
    properties:
      name:
        type: string
      type:
        enum:
          - ContactPerson
          - DataCollector
          - DataCurator
          - DataManager
          - Editor
          - Researcher
          - RightsHolder
          - Sponsor
          - Other
      affiliation:
        type: string
      orcid:
        type: string
      gnd:
        type: string
    required:
      - name
  Author:
    type: object
    properties:
      name:
        type: string
      affiliation:
        type: string
      orcid:
        type: string
      gnd:
        type: string
    required:
      - name
  DepositionFile:
    type: object
    properties:
      id:
        type: string
      filename:
        type: string
      filesize:
        type: integer
      checksum:
        type: string
    required:
      - id
      - filename
      - filesize
      - checksum
