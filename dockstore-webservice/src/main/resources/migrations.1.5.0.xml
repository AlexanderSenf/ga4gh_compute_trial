<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<!--
  ~    Copyright 2017 OICR
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"
                   context="1.5.0">

    <!-- adding support for storing more information on references, mostly for git -->
    <changeSet author="dyuen (generated)" id="create reference type">
        <addColumn tableName="tag">
            <column defaultValue="UNSET" name="referencetype" type="text"/>
        </addColumn>
        <addColumn tableName="workflowversion">
            <column defaultValue="UNSET" name="referencetype" type="text"/>
        </addColumn>
        <addNotNullConstraint columnDataType="clob" columnName="referencetype" tableName="tag"/>
        <addNotNullConstraint columnDataType="clob" columnName="referencetype" tableName="workflowversion"/>
    </changeSet>

    <!-- adding support for input and output format -->
    <changeSet author="gluu (generated)" id="create-fileformat-tables">
        <createTable tableName="fileformat">
            <column autoIncrement="true" name="id" type="BIGSERIAL">
                <constraints primaryKey="true" primaryKeyName="fileformat_pkey"/>
            </column>
            <column name="value" type="text"/>
        </createTable>
        <createTable tableName="version_input_fileformat">
            <column name="versionid" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="version_input_fileformat_pkey"/>
            </column>
            <column name="fileformatid" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="version_input_fileformat_pkey"/>
            </column>
        </createTable>
        <createTable tableName="version_output_fileformat">
            <column name="versionid" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="version_outputfileformat_pkey"/>
            </column>
            <column name="fileformatid" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="version_outputfileformat_pkey"/>
            </column>
        </createTable>
        <addUniqueConstraint columnNames="value" constraintName="unique_fileformat" tableName="fileformat"/>
        <addForeignKeyConstraint baseColumnNames="fileformatid" baseTableName="version_input_fileformat" constraintName="fk_fileformatid_with_version_input_fileformat" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="fileformat"/>
        <addForeignKeyConstraint baseColumnNames="fileformatid" baseTableName="version_output_fileformat" constraintName="fk_fileformatid_with_version_output_fileformat" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="fileformat"/>
        <addColumn tableName="fileformat">
            <column name="dbcreatedate" type="timestamp"/>
        </addColumn>
        <addColumn tableName="fileformat">
            <column name="dbupdatedate" type="timestamp"/>
        </addColumn>
    </changeSet>

    <!-- adding support for tracking who edited a revision of a hosted tool or workflow -->
    <changeSet author="dyuen (generated)" id="version editor">
        <addColumn tableName="tag">
            <column name="versioneditor_id" type="int8"/>
        </addColumn>
        <addColumn tableName="workflowversion">
            <column name="versioneditor_id" type="int8"/>
        </addColumn>
        <addForeignKeyConstraint baseColumnNames="versioneditor_id" baseTableName="workflowversion" constraintName="versionEditorForWorkflows" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="enduser"/>
        <addForeignKeyConstraint baseColumnNames="versioneditor_id" baseTableName="tag" constraintName="versionEditorForTools" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="enduser"/>
    </changeSet>

    <!-- add commit id -->
    <changeSet author="dyuen (generated)" id="add commit ids to versions">
        <addColumn tableName="tag">
            <column name="commitid" type="text"/>
        </addColumn>
        <addColumn tableName="workflowversion">
            <column name="commitid" type="text"/>
        </addColumn>
    </changeSet>

    <!-- Move GitHub profile information from the enduser table to a new user_profile table -->
    <changeSet author="gluu (generated)" id="move-github-profile-to-user_profile-table">
        <createTable tableName="user_profile">
            <column name="id" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="user_profile_pkey"/>
            </column>
            <column name="avatarurl" type="TEXT"/>
            <column name="bio" type="TEXT"/>
            <column name="company" type="TEXT"/>
            <column name="email" type="TEXT"/>
            <column name="location" type="TEXT"/>
            <column name="name" type="TEXT"/>
            <column name="token_type" type="TEXT">
                <constraints primaryKey="true" primaryKeyName="user_profile_pkey"/>
            </column>
            <column name="dbcreatedate" type="timestamp"/>
            <column name="dbupdatedate" type="timestamp"/>
        </createTable>
        <sql dbms="postgresql">
            INSERT INTO user_profile(id, avatarurl, bio, company, email, location, name, token_type) select id, avatarurl, bio, company, email, location, '', 'github.com' from enduser
        </sql>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="user_profile" constraintName="fk_id_with_user_profile" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="enduser"/>
        <dropColumn columnName="bio" tableName="enduser"/>
        <dropColumn columnName="company" tableName="enduser"/>
        <dropColumn columnName="email" tableName="enduser"/>
        <dropColumn columnName="location" tableName="enduser"/>
    </changeSet>

    <!-- add verification map to sourcefiles -->
     <changeSet author="dyuen (generated)" id="verification_metadata">
        <createTable tableName="sourcefile_verified">
            <column name="id" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="sourcefile_verified_pkey"/>
            </column>
            <column name="metadata" type="TEXT"/>
            <column name="verified" type="BOOLEAN">
                <constraints nullable="false"/>
            </column>
            <column name="source" type="TEXT">
                <constraints primaryKey="true" primaryKeyName="sourcefile_verified_pkey"/>
            </column>
        </createTable>
        <addColumn tableName="enduser">
            <column name="curator" type="bool" defaultValue='false'/>
        </addColumn>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="sourcefile_verified" constraintName="foreign_key" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="sourcefile"/>
    </changeSet>

    <!-- add concept of aliases as suggested by team calcium work -->
    <changeSet author="dyuen (generated)" id="entry aliases">
        <createTable tableName="entry_alias">
            <column name="id" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="entry_alias_pkey"/>
            </column>
            <column name="content" type="TEXT"/>
            <column name="alias" type="TEXT">
                <constraints primaryKey="true" primaryKeyName="entry_alias_pkey"/>
            </column>
        </createTable>
        <addUniqueConstraint columnNames="alias" constraintName="aliases_are_unique" tableName="entry_alias"/>
    </changeSet>

    <!-- add dates to new tables -->
    <changeSet author="dyuen (generated)" id="date_more_tables">
        <addColumn tableName="sourcefile_verified">
            <column name="dbcreatedate" type="timestamp"/>
        </addColumn>
        <addColumn tableName="entry_alias">
            <column name="dbcreatedate" type="timestamp"/>
        </addColumn>
        <addColumn tableName="sourcefile_verified">
            <column name="dbupdatedate" type="timestamp"/>
        </addColumn>
        <addColumn tableName="entry_alias">
            <column name="dbupdatedate" type="timestamp"/>
        </addColumn>
    </changeSet>
    <changeSet author="gluu" id="migrate-legacy-verification-information">
        <sql dbms="postgresql">
            <comment>Migrate the verified workflow versions into the new sourcefile_verified table</comment>
            INSERT INTO sourcefile_verified(id, metadata, verified, source) select s.id, v.verifiedSource, v.verified, 'Dockstore CLI' from
            sourcefile s inner join version_sourcefile vs on vs.sourcefileid = s.id inner join workflowversion v on v.id = vs.versionid
            where v.verified='true' and (s.type='CWL_TEST_JSON' OR s.type='WDL_TEST_JSON')
        </sql>
        <sql dbms="postgresql">
            <comment>Migrate the verified tags into the new sourcefile_verified table</comment>
            INSERT INTO sourcefile_verified(id, metadata, verified, source) select s.id, v.verifiedSource, v.verified, 'Dockstore CLI' from
            sourcefile s inner join version_sourcefile vs on vs.sourcefileid = s.id inner join tag v on v.id = vs.versionid where
            v.verified='true' and (s.type='CWL_TEST_JSON' OR s.type='WDL_TEST_JSON')
        </sql>
    </changeSet>
    <changeSet author="gluu" id="no-orphaned-tokens">
        <sql dbms="postgresql">
            <comment>Delete tokens that do not belong to any users</comment>
            DELETE from token where userid not in (select id from enduser)
        </sql>
        <addForeignKeyConstraint baseTableName="token" baseColumnNames="userid" constraintName="fk_userid_with_enduser" referencedTableName="enduser" referencedColumnNames="id"/>
    </changeSet>
    <changeSet author="dyuen (generated)" id="namechanged">
        <addColumn tableName="enduser">
            <column name="setupcomplete" type="bool" defaultValue="false"/>
        </addColumn>
        <addColumn tableName="user_profile">
            <column name="username" type="text"/>
        </addColumn>
        <addUniqueConstraint columnNames="username" constraintName="username_unique" tableName="enduser"/>
        <comment> migrate existing usernames to profiles based on whether or not they have an
        @' as a proxy for whether they are from github or google </comment>
        <sql dbms="postgresql">
            update user_profile p set username = coalesce((select username from enduser e where p.id = e.id and e.username not like '%@%' and p.token_type = 'github.com'));
        </sql>
        <sql dbms="postgresql">
            update user_profile p set username = coalesce(username, (select username from enduser e where p.id = e.id and e.username like '%@%' and p.token_type = 'google.com'));
        </sql>
        <addUniqueConstraint columnNames="username, token_type" constraintName="one_sign_in_method_by_profile" tableName="user_profile"/>
        <addUniqueConstraint columnNames="username, tokensource" constraintName="one_token_link_per_identify" tableName="token"/>
        <createIndex indexName="profile_by_email" tableName="user_profile">
            <column name="email"/>
        </createIndex>
        <createIndex indexName="profile_by_username" tableName="user_profile">
            <column name="username"/>
        </createIndex>
    </changeSet>
    <changeSet id="changeNextflowToNFL" author="agduncan">
        <sql dbms="postgresql">
            UPDATE workflow SET descriptorType='nfl' WHERE descriptorType='nextflow'
        </sql>
    </changeSet>
    <changeSet id="addSourcefileAbsolutePath" author="agduncan">
        <addColumn tableName="sourcefile">
            <column name="absolutepath" type="varchar(255 BYTE)"/>
        </addColumn>
        <sql dbms="postgresql">
            UPDATE sourcefile SET absolutepath=path
        </sql>
    </changeSet>

</databaseChangeLog>
